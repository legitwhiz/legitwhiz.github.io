カオスエンジニアリングって何？

●カオスエンジニアリングとは

カオスエンジニアリングとは、
わざと本番障害を起こして
すぐ復旧させることを繰り返し、
本当の障害発生に備える、
という驚くべき手法。

ただし、これはクラウド等の
分散システムでのことだ！

カオスエンジニアリングの目的は、
単体テストや結合テストではなく、
システムの弾力性を測ることなのだ。

>分散システムではコンポーネントが
>多い分、全体として個々の
>ネットワーク障害やディスクの
>故障と言った現象が起こる頻度が
>高まります。分散システムで
>複数サービスが相互に呼び出し、
>あるいは協調する中、一つの
>コンポーネントがクラッシュ
>しただけでシステム全体が
>クラッシュするようなことが
>あっては大変です。

要するにシステムのボトルネックが
見えずらい分散システムで
信頼性設計と障害時の性能設計が
両立できているかのテストを
実施するということだ。

システムに対して様々な実験を
行って弱点を発見し、
回復力を強化したり、
経験的にシステムの振る舞い
に対しての知見を深めていくことなのだ。

いわゆるテストではなく
実験である点が重要です。

そして、本番環境で実験するところが
最もショッキングな点です。

米国では金融機関や製造業でも
カオスエンジニアリングが
採用されている。

既にオライリーでも
カオスエンジニアリング
が書籍化されている程、
注目されています。

http://www.oreilly.com/webops-perf/free/chaos-engineering.csp
※この内容は、現在はFREEとなっています。


日本のエンタープライズな顧客が殆んどな
メーカーやSIerがどこまで許容し
顧客へ理解させるチカラが
今後試されるのではないでしょうか？


●テストケース(実験ケースか!?)
分散システムは構成が複雑なため、
単純な予測モデルを使った
ケース抽出が難しい。

『実験的・経験的』なアプローチ
をして、システムの挙動を
理解することが原則です。

システムに注入した外乱に対して
システムがどのように
挙動するのかを観察し、
システムへの理解を深める。

外乱はランダムではなく
体系的に与え、システムの想定挙動を
最大限引き出せるような実験を行う。


●参考
動画配信サービスのNetflixは、
AWSで15万台以上の仮想マシン
によって稼働しており、
既にカオスエンジニアリングによる
障害発生に備えている。

http://itpro.nikkeibp.co.jp/atcl/column/17/122800596/010500003/?n_cid=nbpitp_fbed&rt=nocnt&ST=spleaf

●ツール

Dockerコンテナを破壊するChaos Tools
・Chaos Monkey
https://github.com/Netflix/chaosmonkey

・Pumba 
https://github.com/gaia-adm/pumba
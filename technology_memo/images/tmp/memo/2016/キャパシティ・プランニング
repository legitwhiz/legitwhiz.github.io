トランザクション処理とターンアラウンドタイムに関する情報を収集してシステムに必要な性能を見積もり，サーバーやストレージなどのスペックを決定する「キャパシティ・プランニング」の進め方を見ていこう。

図1には，キャパシティ・プランニングの基本的な作業手順を示した。作業手順は，大まかに次の3つのフェーズに分かれる。

(1)構築対象のシステムが実行する処理の種類や量である「ワークロード（負荷）情報」の収集と，それを基にした性能要件の決定｡
(2)性能要件からリソースのスペックを見積もる「サイジング」｡
(3)サイジング結果を評価して精度を高めていく「評価・チューニング」。
 
①ワークロード情報収集
■実施する作業
●ユーザ企業へのヒアリング
●現行システムの性能測定
↓↓
■成果物
●処理の種類(性能要件)
・データベース・アクセス特性
(検索、参照、更新)
●処理量
・トランザクション処理(ピーク時、通常時、突発的な増加に対する余裕値)
・バッチ処理(日次、週次、月次の処理頻度、1回あたりの処理件数、許容時間)
・データサイズ(各処理における最大/最小/平均/%タイル)
・主要なテーブルのサイズ(初期サイズ、伸び率)

↓↓↓↓↓↓
②基本的なシステム構成決定(サイジング)
■実施する作業
●静的積算
(性能要件を基にサーバやストレージ、ネットワークのキャパシティを計算する)
●類似ケース参照
(過去に手掛けた同様な規模、業務のシステムの構成を参考にする)
●ベンチマーク参照
(業界標準のベンチマーク結果やITベンダーが公表している性能評価やレポートを参考にする)
↓↓
■成果物(仮のサイジング結果)
●サーバ、ストレージ、ネットワークの種類とスペック
●物理配置(処理形態、サーバやストレージの配置、ミドルウェアの配置など)

↓↓↓↓↓↓
③サイジング結果の評価・チューニング
■実施する作業
●シミュレーション(評価項目や条件を定めてモデルを作成し、コンピュータ上で性能を計算・予測する)
●待ち行列解析
(評価対象を待ち行列理論に基づく数学的モデルで表現し、性能を計算・予測する)
●プロトタイピング
(本番環境に近いシステムを構築・稼働させて、性能を予測する)
↓↓
■成果物(より詳細なサイジング)
●サーバ、ストレージ、ネットワークの種類とサイズ
●物理配置(処理形態、サーバやストレージの配置、ミドルウェアの配置など)

　実際のシステム開発の現場では，時間やコストの制約から，かならずしもこの手順に沿ってきちんとキャパシティ・プランニングが行われるわけではない。
しかし，システムの複雑化に伴って性能に関するトラブルが多発しているだけに，本来あるべき手順を理解しておくことは重要だ。


業務から性能要件を決める

　最初のフェーズでは，ユーザー企業の情報システム担当者や利用部門などへのヒアリングを基に，システムにかかる負荷と性能要件を洗い出す。具体的には業務の種類や処理の量，実現すべき処理時間などである。

　トランザクション処理ならば，処理ピーク時や通常時の毎時/毎分/毎秒当たりの処理件数や1件当たりのデータサイズ，バッチ処理ならば日次/週次/月次当たりの処理件数，それぞれの処理における許容時間，1件当たりのデータサイズなどが必要不可欠な情報となる。例えばECサイトで顧客が商品を注文するトランザクション処理ならば，「トランザクション1件当たりのターンアラウンドタイムを2秒以内に押さえる」，「営業時間中には，毎秒500件のトランザクションを処理する」といった具合だ。

　ただし，すべての業務について負荷情報を収集する必要はない。「業務の中には，営業時間中にはめったに実行されなかったり，処理時間が問題にならないものがある」。そこで，重要度や実行頻度などを基にして，いくつかの業務を選び出し，その負荷を検討する。

基本は静的積算

　性能要件を基に，システムの具体的な構成を決定するのが，第2フェーズの「サイジング」と，第3フェーズの「評価・チューニング」である。

　実際はこれらのフェーズは不可分であり，一体のものとして進められることが多い。サーバーやストレージのスペックをサイジングによって見積もったとしても，それが本当に十分な性能を発揮できるかどうかは，本番環境で稼働させてみないと分からないからだ。
そこで，サイジングと評価・チューニングを繰り返しながら，可能な限り見積もりの精度を高めていく。

　通常はワークロード情報と性能要件が出揃ったら，過去に手がけた同規模・同種業務のシステムの構成や，業界標準のベンチマーク結果，ITベンダーが公表している性能評価レポートなどを参考にして，“仮の”システム構成を決める。「仮」と言っても，この時点でできるだけ高い精度が求められることは言うまでもない。

　その際に，TPCやSPECなど，業界標準のベンチマーク指標やITベンダーの公表値は，有用な情報源になる。ただし，ベンチマークで定義されている処理内容を調べて，できる限り顧客の業務特性に近いベンチマーク指標を選ぶことが大切だ。


■静的積算によるサイジングの例
●前提条件/性能要件
・最大スループット 500TPS
・プロセス使用率     70%
・最大ターンアラウンドタイム  1秒
・最大ターンアラウンドタイムの内訳 Webサーバで0.4秒、DBサーバで0.6秒
●仮のシステム構成の基礎データ
・システム構成 Webサーバ、DBサーバ各1台
・DBサーバのキャッシュヒット率 90%
・RAID性能(キャッシュヒット率) 70%
・ディスクシーク時間 7m秒
・ディスク回転数 7200rpm(回転待ち時間4.2m秒)
・ストライピング構成
10台のディスクでストライピングを行う。

①前提として1トランザクション当たり、DBの50データブロックにアクセスすりSQLが実行される｡1データブロックに必要なDBサーバのプロセッサ時間はXeon(3.2GHz)で0.11msであることが確認されている。

②500TPSのトランザクションを処理すると、その際のデータブロックアクセス回数は
500TPS*50データブロック=25000データブロック/秒

③1データブロックを処理するのに必要なプロセッサ時間は①より0.11ms
500TPSを処理するのにDBサーバが消費するプロセッサ時間は
25000データブロック/秒*0.11ms=2750ms

④DBサーバの目標プロセッサ使用率は70%以下であるため、搭載すべきプロセッサ個数は
2750ms/700ms≒ 4個

⑤DBサーバの目標プロセッサ使用率は70%なので、この場合の平均応答時間を待ち行列解析の公式(M/M/1モデル)から求めると
プロセッサ時間/(1-プロセッサ使用率)=0.11/(1-0.7)=0.37ms

⑥25000データブロックアクセスのうち、実際にディスク装置にアクセスするのは
25000*(DBサーバのキャッシュヒットミス)*(ディスクキャッシュミス)
=25000*(1-0.9)*(1-0.7)
=0.37ms

⑦750回/sディスクアクセスが10台のディスク装置に分散して生じるため、1台のディスク装置の使用率は
750/10*(シーク時間+回転待ち時間)/1000
=750/10*(7+4.2)/1000
=0.84
84%

⑧ディスク装置の平均応答時間
(シーク時間+回転待ち時間)/(1-使用率)
(7+4.2)/(1-0.84)
=70ms

⑨SCSI等の遅延を無視して、DBサーバのプロセッサ時間とディスク装置の応答時間だけを加味した平均ターンアラウンドタイムを求めると
プロセッサの平均応答時間*50+ディスク装置の平均応答時間*50*(1-0.9)*(1-0.7)
=0.37*50*(1-0.9)*(1-0.7)
=123.5ms

⑩想定される最大ターンアラウンドタイムを求める。待ち行列理論では最大応答時間としてタイル値を利用する｡平均値の約2.3倍と決められているので、最大プロセッサ時間は0.851ms(⑤を2.3倍)、最大ディスク応答時間は161ms(⑧を2.3倍)となる。よって最大ターンアラウンドタイムは
0.851*50+161*50*0.1*0.3
=284.05ms
これは目標の0.6s(600ms)より短い｡従って問題ないことが分かる。

ーーーーーーーーーーーーーーー
■複数の評価手法を併用する

　仮のシステム構成を決定したら，その性能を評価する。評価手法には様々なものがある。ここでは，代表的な手法である「静的積算」，「シミュレーション」，「プロトタイピング」について紹介しよう。

　「静的積算」とは要求性能とハードウエアの性能緒元を基に，予測される処理時間を机上で計算する手法だ。前ページに示した例では，要求性能を単位時間当たりの処理量である「最大スループット500TPS（トランザクション/秒），ターンアラウンドタイム1秒以内，プロセサ使用率70％以下」とし，仮システムで用意したデータベース・サーバーが，この要求性能を満たすことができるかを計算している。

　静的積算においてよく用いられる数学理論に「待ち行列理論」がある。確率・統計手法を使って，システムの性能を計算・予測する手法である。図2に示した静的積算の中でも，待ち行列理論に基づいて平均レスポンスタイムを計算している。

　静的積算はシステムの概要を評価するには有効だが，精度は決して高いとは言えず，また複雑なシステムには対応できない。そこで登場するのが「シミュレーション」である。

　シミュレーションとは，発生する処理の種類と量，評価項目などを定めたモデル・プログラムを作って，コンピュータ上で性能を計算・予測する手法である。静的積算に比べてモデル作成の手間とコストがかかる。だが，様々な業務に応じてプログラムを作れるという柔軟性がある。また一度プログラムを作ってしまえば，パラメータを変更するだけで状況の性能を予測することが可能だ。

　ここで注意してほしいのは，実際には製品の組み合わせが複雑だったり収集したワークロード情報の精度が低いなどの理由から，性能を1つの手法だけで評価するのは難しいことだ。そのため，「通常は複数の評価手法を組み合わせて利用する」。例えば静的積算でシステム構成の概略を評価し，処理量の変動によるプロセサ使用率の変化を確かめるためにシミュレーションを利用する，といった具合だ。

性能を「実測」して評価

　静的積算や待ち行列解析，シミュレーションは，いずれも性能を「予測」する手法である。これに対して，サイジングしたシステム構成の一部，あるいは最小の構成を実際に構築して，その性能を「実測」する手法がある。それが「プロトタイピング」だ。

　プロトタイピング環境を構築し，テスト用のプログラム，データなどを用意しなければならないので，この手法は静的積算やシミュレーション以上に手間とコストがかかる。しかし，本番環境の性能を高い精度で予測できるという大きなメリットがある。システムの負荷が高まった場合の挙動などは，静的積算やシミュレーションでは測り切れない。コストや時間などの制約から，プロトタイプ環境を用意できない場合は，メーカーが設けている検証施設を利用するのも1つの方法だ。

　プロトタイピングの実行例を示した。サイジングをしたデータベース・サーバーとアプリケーション・サーバーの台数が適当かどうかを，プロトタイピングで評価している。

●サイジング結果
・Apサーバ
IAサーバx2台
(Xeon 3.2GHzx4、4GBmem)
・DBサーバ
IAサーバx1台
(Xeon 3.2GHzx4、8GBmem)
●プロトタイピング環境
・目標スループットは(7000トランザクション/時間)
・Apサーバ、DBサーバは各1台

①テスト用のアプリケーションを稼働させる負荷テストを実施して、スループットとプロセッサ使用率を測定

・実測スループット
21000トランザクション/時間
・実測プロセッサ使用率
APサーバ 140% →ユーザ認証などの付帯処理を実施した場合のプロセッサ使用率換算値を含む計算上の値
DBサーバ 20%

②測定結果を基に、目標スループットを達成するために必要なプロセッサ使用率を計算
※考慮すべき点→DBサーバでの処理は、検索や更新といった処理内容に応じて処理負荷が異なる

本番環境でのプロセッサ使用率
=(実測プロセッサ使用率)*(目標スループット) /(実測スループット)

上記式に値を当てはめると
APサーバ
140*7000/21000
=47%

DBサーバ 
20*7000/21000
=7～20%
検索や更新といった、処理内容に応じた処理負荷が異なることを考慮して、使用率に幅を持たせている。

③本番環境とプロトタイプ環境におけるサーバの能力を比較し、必要な台数を検討

※考慮すべき点
ピーク日におけるプロセッサ使用率の目標値を70%に設定｡
安全係数として、本番環境での平均の処理負荷をプロトタイプ環境の1.5倍に設定｡

本番環境のプロセッサ能力とプロトタイプ環境のプロセッサ能力の比
=(実測プロセッサ使用率/目標プロセッサ使用率)*(本番環境とプロトタイプ環境の処理負荷の比)

上記式に値を当てはめると
APサーバ
(140/70)*1.5=3.0

DBサーバ
(20/70)*1.5=0.4

④結論
(1)APサーバは本番環境の処理をまかなうには、プロトタイプ環境で使用したサーバ3台必要｡
当初のサイジングは2台としていた｡

(2)DBサーバは、プロトタイプ環境で使用したサーバ1台で、本番環境の処理をまかなえる｡従って、当初のサイジング通りとなる。

 
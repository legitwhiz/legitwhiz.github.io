
RHEL7. NFS サーバーの設定

NFS サーバーの設定には２つの方法があります。

NFS の設定ファイル、/etc/exports を手動で編集する方法。
コマンド exportfs の使用により、コマンドラインを介して実行する方法。

●/etc/exports 設定ファイル

/etc/exports ファイルは、リモートホストにエクスポートされるファイルシステムを制御して、オプションを指定します。
以下の構文ルールに従います。
空白行は無視する。
コメントを追加するには、その行をハッシュ記号 (#) で始める。
長い行はバックスラッシュ (\) を使って折り返す。
エクスポートされるファイルシステムはそれぞれ独自の行に置く。
エクスポートされるファイルシステムの後に配置される許可ホストの一覧はすべて、空白文字で分離する。
各ホストのオプションはホスト識別子の直後にある括弧内に配置し、ホストと最初の括弧の間に空白を入れない。
エクスポートされるファイルシステムの各エントリーには以下の構造があります。
export host(options)
前述の構造は以下の変数を使用します。

export
エクスポートされるディレクトリー

host
エクスポートを共有するホストまたはネットワーク

options
host に使用するオプション

各ホストに特定のオプションを付けて複数のホストを指定することができます。これを実行するにはホスト名の後にそれぞれのオプションを以下のように (括弧内に) 付けて、空白区切り行と同じ行にホストを一覧表示します。
export host1(options1) host2(options2) host3(options3)
ホスト名を指定するための異なるメソッドに関する詳細情報については、「ホスト名の形式」 を参照してください。
最も簡素な形式では、/etc/exports ファイルはエクスポートしたディレクトリーとそれにアクセス許可のあるホストを指定するだけです。以下の例のようになります。

例 /etc/exports ファイル

/exported/directory bob.example.com

ここで、bob.example.com は、 NFS サーバーから /exported/directory/ をマウントできます。
この例にはオプションが指定されていないため、NFS は デフォルト の設定を使用します。
デフォルトの設定は以下のようになります。

ro
エクスポートしたファイルシステムは読み込み専用です。リモートホストは、ファイルシステム上で共有されているデータの変更はできません。ファイルシステムに対して変更 (読み込み/書き込み) ができるようにするには、rw オプションを指定します。

sync
NFS サーバーは以前の要求で発生した変更がディスクに書き込まれるまでは、要求に応答しません。それに代わって非同期書き込みを有効にするには、オプション async を指定します。

wdelay
NFS サーバーは、別の書き込み要求が間近に来ていると判定すると、ディスクへの書き込みを遅らせます。別々の書き込みコマンドによるディスクへのアクセス回数を低減できるため、これが書き込みのワークロードを低下させてパフォーマンスを向上します。これを無効にするには、no_wdelay を指定します。デフォルトの sync オプションも指定されている場合にのみ no_wdelay は利用可能になります。

root_squash
これは、 (ローカルではなく) リモートで接続している root ユーザーが root 権限を持つことを阻止するものです。その代わりに、 NFS サーバーは、そのユーザーにユーザー ID nfsnobody を割り当てます。これが、効果的にリモートの root ユーザーの権力を最低のローカルユーザーレベルへと「押しつぶし」て、リモートサーバー上での無許可の書き込み可能性を阻止します。この root squashing を無効にするには、no_root_squash を指定します。
すべてのリモートユーザー (root を含む) を潰す (squash) には、all_squash を使用します。NFS サーバーが特定のホストからリモートユーザーに対して割り当てるべきユーザー ID とグループ ID を指定するには、anonuid と anongid のオプションをそれぞれ以下のように使用します。
export host(anonuid=uid,anongid=gid)
ここで、uid と gid はそれぞれ、ユーザー ID 番号およびグループ ID 番号です。anonuid と anongid のオプションは、リモート NFS ユーザーが共有するための特別なユーザーおよびグループアカウントの作成を可能にします。
デフォルトでは、access control lists (アクセス制御リスト) (ACL) は、Red Hat Enterprise Linux の下で NFS によってサポートされています。この機能を無効にするには、ファイルシステムをエクスポートする際に no_acl オプションを指定します。
すべてのエクスポートされたファイルシステムのデフォルトは明示的に上書きする必要があります。例えば、rw オプションを指定しないと、エクスポートしたファイルシステムは読み込み専用として共有されます。以下のサンプルは、/etc/exports からの行であり、これは２つのデフォルトオプションを上書きしています。
/another/exported/directory 192.168.0.3(rw,async)
この例では、192.168.0.3 は /another/exported/directory/ を読み込み/書き込みでマウントできて、ディスクへの書き込みはすべて非同期となります。エクスポートオプションの詳細については、man exportfs を参照してください。
さらに、デフォルト値が指定されていない他のオプションも利用可能です。これらのオプションとして、サブツリーチェックを無効にする機能、安全でないポートからのアクセスの許可、および安全でないファイルロックの許可 (一部の初期 NFS クライアント実装で必要)などがあります。頻繁には使用しないこれらのオプションの詳細については man exports を参照してください。

重要
/etc/exports ファイルの形式は、特に空白の使用に関しては非常に厳格です。常にホストとエクスポートされるファイルシステムの間、およびホスト同士の間を空白で隔離することを忘れないでください。しかし、コメント行以外では、ファイル内の他の場所には空白が存在すべきではありません。
例えば、以下の２つの行は同じ意味ではありません:

/home bob.example.com(rw) 
/home bob.example.com (rw)

最初の行は bob.example.com からのユーザーにのみ /home ディレクトリーへの読み込み/書き込みアクセスを許可します。
２番目の行は bob.example.com からのユーザーにディレクトリーを読み込みのみで(デフォルト)マウントを許可して、他の人々には読み込み/書き込みでマウントすることを許可します。


●exportfs コマンド

NFS 経由でリモートユーザーにエクスポートされているすべてのファイルシステム、並びにそれらのファイルシステムのアクセスレベルは /etc/exports ファイル内に一覧表示してあります。
nfs サービスが開始すると、/usr/sbin/exportfs コマンドが起動してこのファイルを読み込み、実際のマウントプロセスのために制御を rpc.mountd (NFSv2 または NFSv3の場合) とその後にrpc.nfsd に渡します。
この時点でファイルシステムがリモートユーザーに使用可能になります。
/usr/sbin/exportfs コマンドを手動で発行すると、root ユーザーは NFS サービスを再開始せずにディレクトリーをエクスポートするか、しないかを選択できるようになります。
適切なオプションが与えられると、/usr/sbin/exportfs コマンドはエクスポートしたファイルシステムを /var/lib/nfs/xtab に書き込みます。
rpc.mountd はファイルシステムへのアクセス権限を決定する際に xtab ファイルを参照するため、エクスポートしたファイルシステム一覧への変更はすぐに反映されます。

○/usr/sbin/exportfs で利用可能な一般的なオプションの一覧は以下のようになります。

-r
/etc/exports 内に一覧表示してあるすべてのディレクトリーから　/etc/lib/nfs/xtab 内に新しいエクスポート一覧を構成することにより、それらのディレクトリーがエクスポートされることになります。結果的にこのオプションが /etc/exports 内のいずれかの変更でエクスポート一覧をリフレッシュすることになります。

-a
/usr/sbin/exportfs に渡される他のオプションに応じて、すべてのディレクトリーがエクスポートされるか、またはされないことになります。他のオプションが指定されない場合は、/usr/sbin/exportfs は、/etc/exports 内に指定してあるすべてのファイルシステムをエクスポートします。

-o file-systems
/etc/exports 内に一覧表示されていないエクスポートされるディレクトリーを指定します。file-systems の部分を、エクスポートされるファイルシステムに置き換えます。これらのファイルシステムは、/etc/exports で指定されたものと同じフォーマットでなければなりません。このオプションは、多くの場合エクスポート用ファイルシステム一覧に永久追加する前に、エクスポート予定のファイルシステムをテストするために使用されます。/etc/exports 構文の詳細情報については、「/etc/exports 設定ファイル」を参照してください。

-i
/etc/exports を無視します。コマンドラインから出されたオプションのみが、エクスポート用ファイルシステムの定義に使用されます。

-u
すべての共有ディレクトリーをエクスポートしません。コマンド /usr/sbin/exportfs -ua は、すべての NFS デーモンを稼働状態に維持しながら、NFS ファイル共有を保留します。NFS 共有を再度有効にするには、exportfs -r を使用します。

-v
詳細表示を意味します。エクスポート、または非エクスポートのファイルシステムが exportfs コマンドの実行の際により詳細に表示されます。
exportfs コマンドに対してオプションを渡さない場合、コマンドは現在エクスポートされているファイルシステムの一覧を表示します。exportfs コマンドの詳細については、man exportfs を参照してください。

○NFSv4 で exportfs の使用

Red Hat Enterprise Linux 7 では、提示されるファイルシステムは自動的に同じパスを使用して NFSv3 およびNFSv4 クライアントで利用可能になるため、NFSv4 のエクスポートを設定するための特別なステップは必要ありません。
これは、以前のバージョンとの相違点です。
クライアントによる NFSv4 の使用を防止するには、/etc/sysconfig/nfs で RPCNFSDARGS= -N 4 を選択することにより、それをオフにします。

○ファイアウォール背後での NFS の実行

NFS は rpcbind を必要としますが、これは RPC サービス用のポートを動的に割り当てて、ファイアーウォールルールの設定中に問題を起こす可能性があります。
クライアントがファイアウォール背後で NFS 共有にアクセスできるようにするには、/etc/sysconfig/nfs 設定ファイルを編集して必要な RPC サービスが実行するポートを制御するようにします。
/etc/sysconfig/nfs はデフォルトですべてのシステム上には存在していないかも知れません。
存在しない場合は、作成して port の部分を未使用のポート番号で入れ替えることで、後に続く変数を追加します。 
(別の方法として、ファイルが存在する場合は、デフォルトのエントリをアンコメント化して必要に応じて変更します):

MOUNTD_PORT=port
mountd (rpc.mountd) が使用する TCP と UDP ポートを制御します。

STATD_PORT=port
状態 (rpc.statd) が使用する TCP と UDP ポートを制御します。

LOCKD_TCPPORT=port
nlockmgr (lockd) が使用する TCP ポートを制御します。

LOCKD_UDPPORT=port
nlockmgr (lockd) が使用する UDP ポートを制御します。

NFS が開始に失敗した場合、/var/log/messages をチェックします。
通常は、すでに使用中のポート番号を指定した場合に NFS は開始に失敗します。
/etc/sysconfig/nfs を編集した後に、service nfs restart を使用して NFS サービスを再開始します。
rpcinfo -p コマンドを実行すると、その変化を確認できます。
NFS を許可するようにファイアウォールを設定するには、以下のステップを実行します。


○手順 NFS を許可するためのファイアウォールの設定

NFS 用に TCP と UDP ポート 2049 を許可します。
TCP と UDP ポート 111 (rpcbind/sunrpc) を許可します。
TCP と MOUNTD_PORT="port" で指定された UDP ポートを許可します。
TCP と STATD_PORT="port" で指定された UDP ポートを許可します。
LOCKD_TCPPORT="port" で指定された TCP ポートを許可します。
LOCKD_UDPPORT="port"で指定された UDP ポートを指定します。

○注記
NFSv4.0 コールバックがファイアウォールを通過するように許可するには、/proc/sys/fs/nfs/nfs_callback_tcpport をセットして、サーバーがクライアント上のそのポートに接続できるようにします。
このプロセスは、NFSv4.1 またはそれ以降には必要ありません。そして mountd、statd、および lockd のための他のポート群は純粋な NFSv4 環境では必要ありません。

○NFS エクスポートの発見

NFS サーバーがエクスポートするファイルシステムを発見する方法は２種類あります。
１つ目は、NFSv2 または NFSv3 をサポートするいずれかのサーバー上で、showmount コマンドの使用です。
$ showmount -e myserver
Export list for mysever
/exports/foo
/exports/bar
２つ目は、NFSv4 をサポートするサーバー上で、/ をマウントして周囲を見て回ります。
# mount myserver:/ /mnt/
#cd /mnt/
exports
# ls exports
foo
bar
NFSv4 と更に NFSv2 か NFSv3 のどちらかの２種類をサポートするサーバー上では、上記の両方の方法が機能して同じ結果を出します。

注記
Red Hat Enterprise Linux 6 以前には、設定の仕方によって旧来の NFS サーバーは別々のパス経由で NFSv4 クライアントにファイルシステムをエクスポートすることがありました。それらのサーバーではデフォルトで NFSv4 を有効にしていないため、これは通常、問題にはなっていません。


○ホスト名の形式

ホストは以下の形式にすることができます。
単独マシン
完全修飾型ドメイン名 (サーバーで解決可能な形式)、ホスト名 (サーバーで解決可能な形式)、あるいは IP アドレス
ワイルドカードで指定された一連のマシン
* または ? の文字を使用して文字列の一致を指定します。ワイルドカードは IP アドレスでは使用しないことになっていますが、逆引き DNS ルックアップが失敗した場合には偶然に機能するかも知れません。ワイルドカードを完全修飾型ドメイン名に指定する時は、ドット(.) はワイルドカードの一部にはなりません。例えば、*.example.com はone.example.com を範囲に入れますがone.two.example.com はその範囲に入りません。

IP ネットワーク
a.b.c.d/z を使用します。ここで、a.b.c.d はネットワークであり、z はネットマスクのビット数です (例えば、 192.168.0.0/24)。別の使用可能形式は a.b.c.d/netmask となり、ここで a.b.c.d がネットワークで、netmask がネットマスクです (例えば、 192.168.100.8/255.255.255.0)。

Netgroup
形式 @group-name を使用します。ここで、group-name は NIS netgroup の名前です。

○RDMA 上の NFS

Red Hat Enterprise Linux 7 では、RDMA 対応のハードウェアがマシンにある限り、RDMA サービスは自動化されます。そのため、以下の手順は RMDA パッケージがマシンのインストール時にインストールされなかった場合にのみ従う必要があります。

手順 クライアントから RDMA を有効化

RDMA パッケージをインストールします。
# yum install rdma
initramfs を再作成します。
# dracut -f
再起動します。






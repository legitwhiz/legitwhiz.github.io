
######################################################################
# td-agent.conf for aggregator
# - Env     : management
# - Role    : aeg-logging-aggregator
# - Service : ECS
######################################################################
#system-wide configuration
<system>
#  #Specify log_level. Users can choose trace, debug, info, warn, error, and fatal level
  log_level error
  #Suppress repeated stacktrace.
  suppress_repeated_stacktrace true
  #Specify time value of emitting error log interval.
  emit_error_log_interval 60s
  #Suppress stdout of config when starting fluentd.
  suppress_config_dump true
  #Specify RPC endpoint
  rpc_endpoint 127.0.0.1:24444
  #Specify process name.
  process_name fluentd
  # work on multi process environment
  workers 4
</system>

<source>
  @type forward
  port 24224
</source>

# expose metrics in prometheus format
<source>
  @id in_prometheus
  @type prometheus
  bind 0.0.0.0
  port 24231
  metrics_path /metrics
</source>

<source>
  @id in_prometheus_output_monitor
  @type prometheus_output_monitor
  interval 10
  <labels>
    hostname ${hostname}
  </labels>
</source>

<filter **>
  @id filter_prometheus
  @type prometheus
  <metric>
    name fluentd_input_status_num_records_total
    type counter
    desc The total number of incoming records
    <labels>
      tag ${tag}
      hostname ${hostname}
    </labels>
  </metric>
</filter>

#reporting server app logs
<match aeg.*.app-log>
  @type relabel
  @label @app-log
</match>

#ECS container app log
<match aeg.*.ecs-batch>
  @type relabel
  @label @ecs
</match>

#EC2 Linux syslog
<match syslog.**>
  @type relabel
  @label @s3forward
</match>

#ecs-agentlog
<match ecs-agentlog>
  @type relabel
  @label @s3forward
</match>

#ecs-agentlog
<match ecs-initlog>
  @type relabel
  @label @s3forward
</match>

#EC2 Windows winevtlog
<match eventlog**>
  @type relabel
  @label @s3forward
</match>

#EC2 python application logs
<label @app-log>
  <filter>
    @type record_transformer
    enable_ruby
    auto_typecast true
    remove_keys source,log
    <record>
      timestamp      ${record[""]}
      level          ${record[""]}
      hostname       ${record[""]}
      user_id        ${record[""]}
      correlation_id ${record[""]}
      logger         ${record[""]}
      message        ${record[""]}
      thread         ${record[""]}
      role           ${record[""]}
      system         ${record[""]}
      service        ${record[""]}
      tag            ${tag}
    </record>
  </filter>
  <match>
    @type relabel
    @label @ec2meta
  </match>
</label>


#ECS container application logs
<label @ecs>
  <filter>
    @type record_transformer
    enable_ruby
    auto_typecast true
    remove_keys source,log
    <record>
      hostname       ${record[""]}
      user_id        ""
      correlation_id ${record[""]}
      message        ${record[""]}
      system         ""
      service        ""
      tag            ${tag}
    </record>
  </filter>
  <filter>
    @type parser
    key_name message
    reserve_data true
    <parse>
      @type regexp
      expression /^(?<timestamp>\d{4}-\d{1,2}-\d{1,2} \d{2}:\d{2}:\d{2}.\d{1,9})\s*\[(?<level>[A-Z ]{4,5})\]\s*\[(?<role>[A-Z]{3})\]\s*\[(?<logger>.*?)\],?\s*(?<message>.*)/
    </parse>
  </filter>
  <match>
    @type relabel
    @label @ec2meta
  </match>
</label>


<label @ec2meta>
  <filter **>
    @id filter_ec2metadata
    @type ec2_metadata
    metadata_refresh_seconds 300 # Optional, default 300 seconds
    <record>
      name          ${tagset_name} #prd01-c-tky-tableauserver-analyticspf
      instance_id   ${instance_id} # i-88502d07
      az            ${availability_zone} #ap-northeast-1c
      region        ${region} #ap-northeast-1
      private_ip    ${private_ip} #10.184.20.111
      domain        ${tagset_domain} #FRIT-Staging Tokyo EnterpriseStaging
      segment       ${tagset_segment} #pubic/private/secure
      env           ${tagset_env} #production/staging
      #if any other tags are required, add record.
    </record>
  </filter>
  <match **>
    @type relabel
    @label @s3forward
  </match>
</label>

## Fowarding S3
<label @s3forward>
  <match aeg.**>
    @type copy
    <store>
      @type s3
      s3_bucket ""
      s3_region ""
      time_slice_format %Y%m%d
      path ""
      buffer_path /var/log/td-agent/buffer_s3/
      buffer_chunk_limit_size 80m
      buffer_queue_limit 1280
    </store>
    <store>
      @type relabel
      @label @##S3_NEXT_LABEL##
    </store>
  </match>
  <match **>
    @type copy
    <store>
      @type s3
      s3_bucket ""
      s3_region ""
      time_slice_format %Y%m%d
      path ""
      buffer_path /var/log/td-agent/buffer_s3/
      buffer_chunk_limit_size 80m
      buffer_queue_limit 1280
    </store>
    <store>
      @type relabel
      @label @##S3_NEXT_LABEL##
    </store>
  </match>
</label>

## Fowarding JP1Node
<label @jp1forward>
  <match **>
    @type copy
    <store>
      @type forward
      <server>
        host ""
        port ""
      </server>
    </store>
    <store>
      @type relabel
      @label @##LOGGING_NEXT_LABEL##
    </store>
  </match>
</label>

#Suppressor
<label @suppressor>
  <match aeg.**>
    @type rewrite_tag_filter
    <rule>
      key     level
      pattern /^(ERROR|WARN) *$/
      tag     suppress.${tag}
    </rule>
    <rule>
      key     level
      pattern /^.*$/
      tag     no-suppress.${tag}
    </rule>
  </match>
  <filter suppress.**>
    @type             suppress
    interval          10
    num               20
    max_slot_num      10000
    attr_keys         level,role,correlation_id,logger
  </filter>
  <match suppress.**>
    @type route
    remove_tag_prefix suppress
    <route **>
      copy
      @label @##SUPPRESSOR_NEXT_LABEL##
    </route>
  </match>
  <match no-suppress.**>
    @type route
    remove_tag_prefix no-suppress
    <route **>
      copy
      @label @##SUPPRESSOR_NEXT_LABEL##
    </route>
  </match>
  <match> # Non aeg.** logs are passed to the next label without being processed.
    @type relabel
    @label @##SUPPRESSOR_NEXT_LABEL##
  </match>
</label>

## Fowarding Blue Aggregator
<label @forward-aggregator>
  <filter>
    @type record_transformer
    remove_keys source,log
  </filter>
  <match **>
    @type copy
    <store>
      @id out_forward
      @type forward
      <server>
        # Blue Aggregator
        host ""
        port ""
      </server>
      # use longer flush_interval to reduce CPU usage.
      # note that this is a trade-off against latency.
      <buffer>
        @type file
        path /var/log/td-agent/buffer/
        flush_interval 1s
        chunk_limit_size 80m
      </buffer>
    </store>
    <worker 0>
      # count number of outgoing records per tag
      <store>
        @id out_prometheus
        @type prometheus
        <metric>
          name fluentd_output_status_num_records_total
          type counter
          desc The total number of outgoing records
          <labels>
            tag ${tag}
            hostname ${hostname}
          </labels>
        </metric>
      </store>
    </worker>
  </match>
</label>

## do not process
<label @terminate>
  <match terminate>
    @type stdout
  </match>
</label>

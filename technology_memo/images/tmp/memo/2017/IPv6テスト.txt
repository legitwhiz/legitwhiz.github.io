
サーバ環境を前提としたIPv6の設定テスト


■■■■ 目標

■ 3台のRHEL6サーバに対して、eth0だけ持たせて、それにIPv4、IPv6のそれぞれ固定IPアドレスを振る場合を考慮してみる

■ うち1台はIPv6グローバルIPアドレスも持たせる場合とする

■ VLANとかは省略



■■■■ 各サーバが持つIPv6アドレスは以下のようになる

■■ IPv6リンクローカルアドレス

IPv6ではアドレスの中にNICのMAC自体を含めることができるので、これにより他と重複しないことが保証されたIPアドレスを必ず生成できる。
このため、RHEL上でIPv6が有効になると即NICポートごとにこのIPv6アドレスが生成されて割り振られる。

アドレスの値は【fe80:0000:0000:0000:020c:29ff:fe4f:64e8/64】のように最初がfe80でそのあと後ろ側から詰める形で【MACアドレスをちょっと変えたもの】がつく。

※ この環境のNICのMACアドレスは【HWaddr 00:0C:29:4F:64:E8】だった。これの【先頭2桁をちょっといじる+中間にFFFEを挟み込む】とした値になる

※ IPv4でいうアドレスの中のホスト部分は、IPv6では原則として/64で固定。


このアドレスでもIPv6アドレスを持つ機器同士の通信ができるのだが、
リンクローカルアドレスには
【MACが変わるとアドレスが変わる＝NIC交換するとアドレスが変わる】という性質があるので
サーバではこれに頼った運用はできない。

実際には、IPv6の足回り機能であるDHCP6などの動作で使ったり、同セグメント内の近隣機器を探したりで使われる。



■■ IPv6ローカルアドレス

リンクローカルアドレスでは
【MACが変わるとアドレスが変わる＝NIC交換すると変わる】
なので、サーバではこれとは別のローカルアドレスを設定する必要がある。
感覚としてはIPv4での固定IPアドレス割り振りと同様。


アドレスの構成は
【ローカル用のプリフィックス部分】＋【サブネットID】＋【インターフェイスID】という組み合わせになる。


■【ローカル用のプリフィックス部分】は、他と被らない値を生成して使用する。
正式なものではないが簡易な払い出しは以下のような感じ。

サーバ上で以下スクリプトを実行する

>  #!/bin/sh
>  SEC=`ntptime | grep " time" | head -1 | 
>        sed 's/^.*time ([^.]*).([^ ]*).*$/0x1, 0x2/'`
>  EUI64=`ip addr show dev eth0 | grep fe80 | 
>        sed 's/^.*fe80::([^/]*)/64.*$/0x1/' | sed 's/:/, 0x/g'`
>  echo SHA-1: `perl -e "print pack "N2n4", $SEC, $EUI64" | 
>        sha1sum - | awk '{print $1}'`

上記スクリプトを実行すると乱数が表示されるので、それを使い
【頭にfd】＋【乱数の下位10バイト】で文字列を生成する。

今回のスクリプト実行で出力された乱数の下位10バイトは
623cfe4b2c
だったので、
これの頭にfdをつけて48ビットになるようにして、
[fd62:3cfe:4b2c:] となる (商用では他の正式な方法で決めること)


■ 【サブネットID】は今回は[0000]としておく


■ 【インターフェイスID】は以下2つのパターンで設定できるが、サーバの場合実際に使用するのは2つ目のほうになる


・1つ目の方法：
リンクローカルアドレスの内容を見て、後ろ側についているMACから生成された値の部分を流用して設定する。
必ず一意にできるがMACに紐づいたアドレスになってしまっていることに変わりがないためサーバの場合には使えない。


・2つ目の方法：
IPv4の手動IPアドレス管理と同様に、管理簿を作って適当に番号を振る。


ここで1つ目の方法を使用しないと取り決めたネットワーク上では、
【プリフィックス】＋【サブネットID】＋【インターフェイスID】で、

[fd62:3cfe:4b2c:0000:0000:0000:0000:0001/64]から
[fd62:3cfe:4b2c:0000:FFFF:FFFF:FFFF:FFFE/64]までのIPが使える（はず、厳密には未確認)

※ 1つ目の方法と2つ目の方法を併用すると、偶然MACアドレスと重複する値を手動で割り振ったときに衝突するので注意


■ なので、仮に今回3台のサーバを立てる場合で、各サーバのeth0に設定するIPv6ローカルアドレスは、例として

1台目：[fd62:3cfe:4b2c:0000:0000:0000:0000:0001/64]
2台目：[fd62:3cfe:4b2c:0000:0000:0000:0000:0002/64]
3台目：[fd62:3cfe:4b2c:0000:0000:0000:0000:0003/64]

のようになる



■■ IPv6グローバルアドレス

IPv4の場合と同じく、外部と直接通信する場合にはグローバルアドレスが必要で、グローバルIPv6アドレスの管理組織から払い出してもらう必要がある


現時点のグローバルIPv6アドレスの管理組織から払い出しを受けると、
【2001:】
【2002:】
【2003:】
のいずれかから始まるIPアドレスが割り当てられる場合がほとんどだが、払い出し対象は今後増えていくはず。


インターフェイスIDの部分はローカルアドレスの場合と同じく

1つ目の方法：MACから生成された文字列を使う
2つ目の方法：IPv4の手動IPアドレス管理と同様に、管理簿を作って適当に番号を振る

があるが、1つ目の方法ではNICが変わるとアドレスが変わってしまうことと、
グローバルIPの場合【外部からMACアドレスが丸見えのままになる】ことが問題になるので
2つ目の方法を使用する。


2つ目の方法だけを使用すると決めた場合、
例として【2001:1111:1111:3333::/64】(サブネットIDは3333の1つのみ許可の場合)が払い出された場合で、
IPv6グローバルIPとしては
【2001:1111:1111:3333:0000:0000:0000:0001/64】から
【2001:1111:1111:3333:FFFF:FFFF:FFFF:FFFE/64】までのIPが使える（はず、厳密には未確認)

※ 上記のように、サブネットIDまで全部固定指定されてその配下の /64 の部分だけ自由というのは個人契約のフレッツとかでよくあるパターン


仮にサーバの1台目に適当にグローバルIPアドレスを持たせると

【2001:1111:1111:3333:0000:0000:0000:0001/64】となる



■ 結果

サーバ1台目のeth0：
IPv4 : 192.168.0.1 / 24 (とかいつも通り固定で振る)
IPv6 : fe80:0000:0000:0000:020c:29ff:fe4f:64e8/64 (リンクローカルアドレス、MACから生成)
IPv6 : fd62:3cfe:4b2c:0000:0000:0000:0000:0001/64 (ローカルアドレス、手動割当)
IPv6 : 2001:1111:1111:3333:0000:0000:0000:0001/64 (グローバルアドレス、手動割当)


サーバ2台目のeth0：
IPv4 : 192.168.0.2 / 24 (とかいつも通り固定で振る)
IPv6 : fe80:0000:0000:0000:020c:29ff:fe3d:c3c2/64 (リンクローカルアドレス、MACから生成)
IPv6 : fd62:3cfe:4b2c:0000:0000:0000:0000:0002/64 (ローカルアドレス、手動割当)


サーバ3台目のeth0：
IPv4 : 192.168.0.3 / 24 (とかいつも通り固定で振る)
IPv6 : fe80:0000:0000:0000:020c:29ff:fe5e:1b3f/64 (リンクローカルアドレス、MACから生成)
IPv6 : fd62:3cfe:4b2c:0000:0000:0000:0000:0003/64 (ローカルアドレス、手動割当)


上記のように設定して、同セグメント間通信はローカルアドレスを使用し、グローバル向けのサービスにはグローバルアドレスを使用する。

/etc/hostsにはローカルアドレスを書く。グローバルアドレスを書くかどうかはシステム次第。
リンクローカルアドレスは書かなくてよいという運用になる。



■■■■ サーバではないマシンにIPv6アドレスや各種情報を自動割り当てしたい場合

IPv4のころはDHCPが行っていた処理が、IPv6では
・raサービス (IPv6での新しい概念)
・DHCP6サービス
2つに分担されるようになった。


■ raサービス (IPv6での新しい概念)
クライアントに対して、参加するセグメントで使用されているプリフィックス部分と、デフォルトゲートウェイを広報する
【ただし使用すべきDNSサーバを通知することができない】


■  DHCP6サービス
IPv4でのDHCPと同じように、クライアントに対してIPアドレスの払い出し通知、使用すべきDNSサーバなどの通知を行う
【ただしデフォルトゲートウェイを通知することができない】


 -> raだけではDNSサーバを自動で通知できない、DHCP6だけではデフォルトゲートウェイを自動で通知できない。このためIPv4のころと同じ感覚でネットワークを管理するためには、raとDHCP6を併用する必要がある

※ 実際にはIPv4のころにDHCPサーバだったサーバに、raデーモンとDHCP6デーモンの両方を入れる場合が多そう



■■ クライアントはどうやって自分が使用するIPv6ローカルアドレスを決めるか

■パターン１：raだけが動いている場合

クライアントは、まずIPv6リンクローカルアドレスを自動作成してIPv6で通信開始する。
raサーバが広報しているra情報を取得し、
使用すべき【プリフィックス＋サブネットID】と【デフォルトゲートウェイ】を取得する。
【取得したプリフィックス＋サブネットID＋自分のMACアドレスから生成した文字列】でIPv6ローカルアドレスを作り、これで通信できる状態となる。
デフォルトゲートウェイはraから取得したものを使用する

【使用すべきDNSサーバは、クライアントに手動で設定しておく必要がある】



■ パターン２：DHCPだけが動ている場合

クライアントは、まずIPv6リンクローカルアドレスを自動作成してIPv6で通信開始する。
DHCP6サーバからIPv6ローカルアドレス、DNSアドレスなどを取得し、これで通信できる状態となる。

【デフォルトゲートウェイは、クライアントに手動で設定しておく必要がある】



■ パターン３：raとDHCPの両方が動いている場合

クライアントは、まずIPv6リンクローカルアドレスを自動作成してIPv6で通信開始する。
raサーバが広報しているra情報を取得し、
使用すべきプリフィックスとデフォルトゲートウェイを取得する。
さらにDHCP6サーバからIPv6ローカルアドレス、DNSアドレスなどを取得する。

ここから、クライアント側の設定次第で2つの処理に分かれる

・ra優先という設定になっているクライアントの場合
【取得したプリフィックス＋サブネットID＋自分のMACアドレスから生成した文字列】でIPv6ローカルアドレスを作り、これで通信できる状態とする。
デフォルトゲートウェイはraから取得したものを使用する。
DNSサーバはDHCP6から取得したものを使用する。


・DHCP6優先という設定になっているクライアントの場合
【DHCP6サーバから取得したIPアドレス】を使用するIPv6ローカルアドレスとし、これで通信できる状態とする。
デフォルトゲートウェイはraから取得したものを使用する。
DNSサーバはDHCP6から取得したものを使用する。




■■■■■■■■ 以下、実際にRHEL6をインストールしてIPv6アドレスを持たせたときのログ



■ CentOS6.6を入れる仮想マシンとして、NICは1ポートのみの仮想マシンを作る。

■ インストール時、IPv4は有効で固定IPを適当に設定する。IPv6は無効としておく。
インストール構成はminimalとしてインストール完了させ、SELINUXはオフにしたたところからスタート


初期状態はこんな感じ

[root@centos6 ~]# cat /etc/sysconfig/network
NETWORKING=yes
HOSTNAME=centos6.6-ipv6-min.localdomain
GATEWAY=192.168.11.254

[root@centos6 ~]# cat /etc/sysconfig/network-scripts/ifcfg-eth0
DEVICE=eth0
TYPE=Ethernet
UUID=8ef45436-1058-4386-a395-7120318edaee
ONBOOT=yes
NM_CONTROLLED=yes
BOOTPROTO=none
HWADDR=00:0C:29:4F:64:E8
IPADDR=192.168.11.126
PREFIX=24
GATEWAY=192.168.11.254
DNS1=192.168.11.254
DEFROUTE=yes
IPV4_FAILURE_FATAL=yes
IPV6INIT=no
NAME="System eth0"
[root@centos6 ~]#


※ 上記のうち、【DNS1】と【GATEWAY】の部分は不要なので最初に削除した


■ IPv6を有効にしてネットワークをリスタート

# vi /etc/sysconfig/network

> # IPv6を有効にする
> NETWORKING_IPV6=yes
> 
> # IPv6アドレスの自動設定を無効にする
> IPV6_AUTOCONF=no


# service network restart

# ifconfig eth0
eth0      Link encap:Ethernet  HWaddr 00:0C:29:4F:64:E8
          inet addr:192.168.11.126  Bcast:192.168.11.255  Mask:255.255.255.0
          inet6 addr: fe80::20c:29ff:fe4f:64e8/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:391 errors:0 dropped:0 overruns:0 frame:0
          TX packets:349 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:54550 (53.2 KiB)  TX bytes:105171 (102.7 KiB)


上記の時点で、リンクローカルアドレスは既に自動で生成されて設定されている。MACに依存したアドレスでいいなら通信も可能。


■ IPv6アドレスとして割り振るローカルアドレスを確定する

プリフィックスは簡易方式で払い出した [fd62:3cfe:4b2c:] とする。

サブネットIDは[0000]とする。

インターフェイスIDはゼロが続いたあと末尾だけ1の値とする。

結果として割り振るローカルアドレスは
[fd62:3cfe:4b2c:0000:0000:0000:0000:0001/64]
とする。


# vi /etc/sysconfig/network-scripts/ifcfg-eth0

> # IPv6を有効にする
> IPV6INIT=yes
> 
> # ローカルアドレスを手動で設定する
> IPV6ADDR=fd62:3cfe:4b2c:0000:0000:0000:0000:0001/64
> 
> 
> # (IPv6のデフォゲがある場合)デフォルトゲートウェイアドレスを設定する
> IPV6_DEFAULTGW= <IPv6のデフォゲがある場合には記載>



service network restartをすると、IPv6アドレスとしてもともと存在したリンクローカルアドレス以外に、ローカルアドレスが付与される

[root@centos6 network-scripts]# servie network restart
-bash: servie: command not found
[root@centos6 network-scripts]# service network restart
Shutting down interface eth0:                              [  OK  ]
Shutting down loopback interface:                          [  OK  ]
Bringing up loopback interface:                            [  OK  ]
Bringing up interface eth0:  Determining if ip address 192.168.11.126 is already in use for device eth0...
                                                           [  OK  ]
[root@centos6 network-scripts]# ifconfig eth0
eth0      Link encap:Ethernet  HWaddr 00:0C:29:4F:64:E8
          inet addr:192.168.11.126  Bcast:192.168.11.255  Mask:255.255.255.0
          inet6 addr: fd62:3cfe:4b2c::1/64 Scope:Global
          inet6 addr: fe80::20c:29ff:fe4f:64e8/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:1909 errors:0 dropped:0 overruns:0 frame:0
          TX packets:1197 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:194117 (189.5 KiB)  TX bytes:225169 (219.8 KiB)

[root@centos6 network-scripts]#


割り振ったIPアドレスにping6が通ることを確認

[root@centos6 network-scripts]# ping6 -c 3 fd62:3cfe:4b2c::1 -I eth0
PING fd62:3cfe:4b2c::1(fd62:3cfe:4b2c::1) from fd62:3cfe:4b2c::1 eth0: 56 data bytes
64 bytes from fd62:3cfe:4b2c::1: icmp_seq=1 ttl=64 time=0.067 ms
64 bytes from fd62:3cfe:4b2c::1: icmp_seq=2 ttl=64 time=0.082 ms
64 bytes from fd62:3cfe:4b2c::1: icmp_seq=3 ttl=64 time=0.079 ms

--- fd62:3cfe:4b2c::1 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2002ms
rtt min/avg/max/mdev = 0.067/0.076/0.082/0.006 ms
[root@centos6 network-scripts]#


■■■■ 




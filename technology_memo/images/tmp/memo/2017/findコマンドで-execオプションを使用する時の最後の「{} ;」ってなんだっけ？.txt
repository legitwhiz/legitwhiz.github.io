findコマンドで-execオプションを使用する時の最後の「{} ;」ってなんだっけ？

私は、-execじゃなく殆どxargsを使ってるので、シェル改修で-execを久々に見ました。
昔は、-execオプションを使ってましたが最後の「{} ;」って今更ながら素朴に思いました。
まあ、manを見ろって話なんですが。

-exec command ;
>すべてコマンドに対する引き数と見なされる。文字列 `{}' は、
>それがコマンドの引き数中に現れるすべての場所で、現在処理中のファイル名に
>置き換えられる。

パイプ("|") 処理における展開("-") を find 内でいうと "{}" になるってことなんですかね。

manを更に読み進めると「-exec {} +」ってのもあったんですね。

>選択したファイルに対して指定したコマンドを実行するが、
>コマンドラインを形成するとき、選択した各ファイル名をコマンドラインの末尾に
>追加して行くという方法を取る

「-exec {} ;」と「-exec {} +」の違いは、ググったら
>「-exec {} +」はファイルをまとめて実行する（グループ実行）全ファイルのパスに置き換えられる
>「-exec {} ;」はファイルを１つずつ実行する（単体実行）ファイルパスにならない

ただし、-exec {} ; より xargs がやっぱり推奨みたいですね。
理由は、find の -exec では 1つのファイルに対して 1回コマンドを実行するが、
xargs ならカーネルが許す限り長いコマンドを作って実行するため、
-exec より xargs の方が fork&exec の回数が少なくなって効率的なはずだそうです。

実際ファイル数が数万個ともなると実行時間に差異が出てくるので分かると思います。
今ある環境で試したところ、少ないファイル数なのにこんなに差が出ました。

# time find /var -type f -exec ls -l {} ; > /dev/null
real    0m23.684s
user    0m6.679s
sys     0m15.602s

# time find /var -type f | xargs ls -l > /dev/null
real    0m0.441s
user    0m0.345s
sys     0m0.160s

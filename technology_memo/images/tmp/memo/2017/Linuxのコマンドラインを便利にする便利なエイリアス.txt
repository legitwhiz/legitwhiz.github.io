
■エイリアスとは何か 
エイリアスは別名という意味ですが、その言葉の通り、長いコマンドなどを任意の文字列で”別名”として登録することができます。　エイリアスとは、基本的に~/.bashrcファイルの中に記述する、短縮コマンドのことだ。エイリアスはタイピングの量を減らし、コマンドを調べる手間を省いてくれる。（もしあなたの記憶力が私と同じ程度であれば、エイリアスは本当に便利なはずだ） 

　エイリアスは.bashrcファイルの終わり近くに記述されている。エイリアスを書き込むべき場所は、コメントアウトされていて分かるようになっている。エイリアスのフォーマットは次のようになっている。 
alias NICKNAME='full command here'

エイリアスの設定は、必ずaliasというキーワードから始まる。NICKNAMEは、コマンドラインに実際に入力する文字列だ。このニックネームは覚えやすいものにすること。=記号も必ず入れる必要がある。=記号に続いて、フラグやスイッチを含む完全なコマンドを、シングルクオーテーションで囲んで記述する。エイリアスの設定を書き込んだら、.bashrcファイルを保存して新しいターミナルを開いてみて欲しい。

●エイリアスの設定
実行例） ” ls -l “コマンドを” ll “として登録する。
[root@node1 ~]# alias ll=’ls -l’
[root@node1 ~]#

●エイリアスの確認
登録したエイリアスは、aliasコマンドを実行することで確認できます。
実行例)
[root@node1 ~]# alias
 alias cp=’cp -i’
alias ll=’ls -l’
alias mv=’mv -i’
alias rm=’rm -i’
[root@node1 ~]#

●エイリアスの登録解除
エイリアスの登録をミスってしまったり、登録していたエイリアスが不要になったりした場合は、以下の コマンドを実行します。
unalias <別名>
実行例) 登録していた “ll” を解除する。
[root@node1 ~]# unalias ll
 [root@node1 ~]#
 [root@node1 ~]# alias
 alias cp=’cp -i’
alias mv=’mv -i’
alias rm=’rm -i’
[root@node1 ~]#

また、デフォルトで登録されている “cp” コマンドなどの様に、別名が通常のコマンドと同じ名前であり、オプションが設定されている場合、一時的にエイリアスを解除したい時があると思います。
そんな時は、コマンドの前にバックスラッシュをつけて実行することで、エイリアスが無効になります。
実行例）
[root@node1 ~]# cp test1 test2
 [root@node1 ~]#

●引数を使用したい場合には、alias コマンドは使用せず関数を使ってエイリアスを設定します。
上記のプロセスチェックを関数で設定すると以下になります。
psck () {
 ps -ef | grep “${1}” | grep -v grep;
 }
こうすることで、以下の様に引数を使用してコマンドを実行出来る様になります。
[root@node1 ~]# psck “sshd”
root      1331     1  0 Apr25 ?        00:00:00 /usr/sbin/sshd
 root      4950  1331  0 00:14 ?        00:00:00 sshd: root@pts/0
 [root@node1 ~]#

また、当たり前ですが関数で設定したものは、alias コマンドでの表示、unalias コマンドでの登録解除を行うことができません。
設定した関数の確認と解除を行うには、以下を実行します。
関数の確認　：　declare -f
関数の解除　：　unset <関数名>

●エイリアスの永続設定
エイリアスの登録を紹介しましたが、このままでは一度ログアウトすると登録したエイリアスが解除されてしまいます。
次回ログイン以降も登録したエイリアスを使用したい場合は、ユーザプロファイルに設定を行います。
ユーザホームディレクトリで「.bash_profile」ファイルを開き、エイリアスを設定します。
[root@node1 ~]# vi .bash_profile
 alias の登録時に実行するコマンドを記載します。
 関数の場合も、関数をそのまま記載します。
設定内容を “:wq” で保存し、ファイルを閉じます。
設定が完了したら、以下のコマンドを実行し設定内容を反映します。
[root@node1 ~]# source .bash_profile
 [root@node1 ~]#
これで、再ログイン後も設定したエイリアスを使用することが出来る様になりました。


###############################################################################
エイリアスの使用例
1. lsコマンド
alias ll='ls -la --color=auto'
これは設定している人多いんじゃないでしょうか。
lsコマンドでは見れないドットから始まるファイルも見たいし、ファイルの詳細も見たいので設定しています。
アイキャッチ画像のスクリーンショットに使わせていただいたslコマンドは、こちらのページの下の方をご覧ください。バイナリは /usr/local/bin などに置くと効果的！

2. grepコマンド
alias grep='grep --color'
検索対象の文字に色が付くので探しやすくなりますよね。

3. dfコマンド
alias df='df -h'
ディスクの容量を確認するdfコマンドですが、バイト数で見たい時ってほとんど無いんですよね。
hオプションで単位を適切に変換して表示できます。

4. psコマンド
alias ps='ps --sort=start_time'
実行中のプロセスを表示するpsコマンドですが、時系列にソートしておくと探しやすいです。

5. sshコマンド
alias host_name='ssh -i ~/.ssh/id_rsa -p 22 -l hoge example.com'
これでサーバーへの接続がとても簡単に。
~/.ssh/configで設定してもいいですよね。

6. ログディレクトリとか
alias loghttpd='cd /var/log/httpd/$(date +%Y)/$(date +%m)/$(date +%d)/'
ログディレクトリなど年月日を含むディレクトリって移動が面倒ですよね。
こんな感じのエイリアスを登録しておけば、今日のディレクトリに簡単に移動できます。

＋α．rmコマンド
alias rm='rm -i'
 

サーバー上で作業する時、誤って必要なファイルを消してしまっては大変ですよね。
そこで、この削除してしまう前にもう一度確認するiオプションのエイリアスを…と思ってしまうかもしれませんが、このエイリアスはやめておいた方がいいと思います。
このエイリアスが無い環境で、大変なことになるかもしれませんよ！

●タイムスタンプが n 日前より古いファイルの削除
fddrm () {
 find `pwd` -mtime +${1} -exec rm -f {} ;
 }
カレントディレクトリにあるファイルの中で、タイムスタンプが引数として渡す n 日前よりも古いものを削除します。
アプリのログを削除運用していない場合などに、まだ必要と思われる n 日前より古いログファイルを削除するときなどに使用します。


●コマンドラインツールでよくある、ドット状のプログレスバーのように。
~/.bashrcにどちらかを記載
alias dots='while read; do echo -n .; done'
alias dots="awk '{printf "."} END{print "n"}'"

ジワジワコンパイル結果が出力されるコマンドも、プログレスバーのようにドットが増える。
make | dots
エラー時はそのまま画面に結果が表示される。
